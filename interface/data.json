{
    "0": {
        "id": 0,
        "Project_Name": "TensorFlow-Bitcoin-Robot",
        "url": "https://github.com/TensorFlowNews/TensorFlow-Bitcoin-Robot",
        "file_name": "rnn_predicter.py",
        "type": "rnn",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 20
        },
        "num_layers": 3,
        "layers": {
            "layer0": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 200,
                    "forget_bias": 1.0
                },
                "begin": 66
            },
            "layer1": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "pred",
                    "labels": "y"
                },
                "begin": 75
            },
            "layer2": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {
                    "learning_rate": "learning_rate"
                },
                "begin": 76
            }
        }
    },
    "1": {
        "id": 1,
        "Project_Name": "text-classification-cnn-rnn",
        "url": "https://github.com/gaussic/text-classification-cnn-rnn",
        "file_name": "cnn_model.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 64,
            "epochs": 10
        },
        "num_layers": 7,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": 5,
                    "name": "Convolution"
                },
                "begin": 50
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 128,
                    "name": "fc1"
                },
                "begin": 56
            },
            "layer2": {
                "type": "Dropout",
                "func": "tf.contrib.layers.dropout",
                "args": {
                    "inputs": ""
                },
                "begin": 57
            },
            "layer3": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 58
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 10,
                    "name": "fc2"
                },
                "begin": 61
            },
            "layer5": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.logits",
                    "labels": "self.input_y"
                },
                "begin": 66
            },
            "layer6": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {
                    "learning_rate": 0.001
                },
                "begin": 69
            }
        }
    },
    "2": {
        "id": 2,
        "Project_Name": "MTCNN-Tensorflow",
        "url": "https://github.com/AITTSMD/MTCNN-Tensorflow",
        "file_name": "mtcnn_model.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 384,
            "epochs": 30,
            "image width": 12,
            "image height": 12
        },
        "num_layers": 7,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "kernel_size": 3,
                    "stride": 1,
                    "scope": "conv1"
                },
                "begin": 188
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        2,
                        2
                    ],
                    "stride": 2,
                    "scope": "pool1",
                    "padding": "SAME"
                },
                "begin": 191
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 16,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv2"
                },
                "begin": 194
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 32,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv3"
                },
                "begin": 198
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 2,
                    "kernel_size": [
                        1,
                        1
                    ],
                    "stride": 1,
                    "scope": "conv4_1",
                    "activation_fn": "tf.nn.softmax"
                },
                "begin": 202
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4,
                    "kernel_size": [
                        1,
                        1
                    ],
                    "stride": 1,
                    "scope": "conv4_2",
                    "activation_fn": null
                },
                "begin": 208
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "kernel_size": [
                        1,
                        1
                    ],
                    "stride": 1,
                    "scope": "conv4_3",
                    "activation_fn": null
                },
                "begin": 212
            }
        }
    },
    "3": {
        "id": 3,
        "Project_Name": "MTCNN-Tensorflow",
        "url": "https://github.com/AITTSMD/MTCNN-Tensorflow",
        "file_name": "mtcnn_model.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 384,
            "epochs": 22,
            "image width": 24,
            "image height": 24
        },
        "num_layers": 10,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 28,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv1"
                },
                "begin": 257
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 2,
                    "scope": "pool1",
                    "padding": "SAME"
                },
                "begin": 259
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 48,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv2"
                },
                "begin": 261
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 2,
                    "scope": "pool2"
                },
                "begin": 263
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": [
                        2,
                        2
                    ],
                    "stride": 1,
                    "scope": "conv3"
                },
                "begin": 265
            },
            "layer5": {
                "type": "Flatten",
                "func": "tf.contrib.slim.flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 267
            },
            "layer6": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "scope": "fc1"
                },
                "begin": 269
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 2,
                    "scope": "cls_fc",
                    "activation_fn": "tf.nn.softmax"
                },
                "begin": 272
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 4,
                    "scope": "bbox_fc",
                    "activation_fn": null
                },
                "begin": 275
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "scope": "landmark_fc",
                    "activation_fn": null
                },
                "begin": 278
            }
        }
    },
    "4": {
        "id": "4",
        "Project_Name": "MTCNN-Tensorflow",
        "url": "https://github.com/AITTSMD/MTCNN-Tensorflow",
        "file_name": "mtcnn_model.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 384,
            "epochs": 22,
            "image width": 48,
            "image height": 48
        },
        "num_layers": 12,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 32,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv1"
                },
                "begin": 299
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 2,
                    "scope": "pool1",
                    "padding": "SAME"
                },
                "begin": 301
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv2"
                },
                "begin": 303
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 2,
                    "scope": "pool2"
                },
                "begin": 305
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": [
                        3,
                        3
                    ],
                    "stride": 1,
                    "scope": "conv3"
                },
                "begin": 307
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "kernel_size": [
                        2,
                        2
                    ],
                    "stride": 2,
                    "scope": "pool3",
                    "padding": "SAME"
                },
                "begin": 309
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": [
                        2,
                        2
                    ],
                    "stride": 1,
                    "scope": "conv4"
                },
                "begin": 311
            },
            "layer7": {
                "type": "Flatten",
                "func": "tf.contrib.slim.flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 313
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "scope": "fc1"
                },
                "begin": 315
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 2,
                    "scope": "cls_fc",
                    "activation_fn": "tf.nn.softmax"
                },
                "begin": 318
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 4,
                    "scope": "bbox_fc",
                    "activation_fn": null
                },
                "begin": 321
            },
            "layer11": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "scope": "landmark_fc",
                    "activation_fn": null
                },
                "begin": 324
            }
        }
    },
    "5": {
        "id": "5",
        "Project_Name": "cnn-rtlsdr",
        "url": "https://github.com/randaller/cnn-rtlsdr",
        "file_name": "train.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.0001,
            "epochs": 25000,
            "batch size": 16
        },
        "num_layers": 11,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": "2",
                    "num_outputs": 64,
                    "kernel_size": [
                        1,
                        3
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 47
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 49
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": "64",
                    "num_outputs": 16,
                    "kernel_size": [
                        2,
                        3
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 47
            },
            "layer4": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 49
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 75
                },
                "begin": 76
            },
            "layer7": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 75
                },
                "begin": 76
            },
            "layer8": {
                "type": "Sigmoid",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": "",
                    "name": "y_pred"
                },
                "begin": 116
            },
            "layer9": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "layer_fc2",
                    "labels": "y_true"
                },
                "begin": 120
            },
            "layer10": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {
                    "learning_rate": 0.0001
                },
                "begin": 122
            }
        }
    },
    "6": {
        "id": "6",
        "Project_Name": "cnn-relation-extraction",
        "url": "https://github.com/roomylee/cnn-relation-extraction",
        "file_name": "text_cnn.py",
        "type": "cnn",
        "hyperparameters": {
            "batch size": 20,
            "epochs": 100,
            "learning rate": 1.0,
            "decay rate": 0.9
        },
        "num_layers": 6,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": "",
                    "kernel_initializer": {
                        "func": "initializer",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 42
                    },
                    "activation": "tf.nn.relu",
                    "name": "Convolution"
                },
                "begin": 41
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 44
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": "",
                    "kernel_initializer": {
                        "func": "initializer",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 42
                    },
                    "activation": "tf.nn.relu",
                    "name": "Convolution"
                },
                "begin": 41
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 44
            },
            "layer4": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 55
            },
            "layer5": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": "",
                    "kernel_initializer": {
                        "func": "initializer",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 59
                    }
                },
                "begin": 59
            }
        }
    },
    "7": {
        "id": "7",
        "Project_Name": "text-classification-cnn-rnn",
        "url": "https://github.com/gaussic/text-classification-cnn-rnn",
        "file_name": "rnn_model.py",
        "type": "LSTM",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 128,
            "epochs": 10
        },
        "num_layers": 9,
        "layers": {
            "layer0": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 128,
                    "state_is_tuple": true
                },
                "begin": 65
            },
            "layer1": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.keep_prob"
                },
                "begin": 66
            },
            "layer2": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 128,
                    "state_is_tuple": true
                },
                "begin": 65
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.keep_prob"
                },
                "begin": 66
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": 70,
                    "units": 128,
                    "name": "fc1"
                },
                "begin": 74
            },
            "layer5": {
                "type": "Dropout",
                "func": "tf.contrib.layers.dropout",
                "args": {
                    "inputs": ""
                },
                "begin": 75
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 76
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 10,
                    "name": "fc2"
                },
                "begin": 79
            },
            "layer8": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.logits",
                    "labels": "self.input_y"
                },
                "begin": 84
            }
        }
    },
    "8": {
        "id": "8",
        "Project_Name": "text-classification-cnn-rnn",
        "url": "https://github.com/gaussic/text-classification-cnn-rnn",
        "file_name": "rnn_model.py",
        "type": "gru",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 128,
            "epochs": 10
        },
        "num_layers": 9,
        "layers": {
            "layer0": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 128,
                    "state_is_tuple": true
                },
                "begin": 65
            },
            "layer1": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.keep_prob"
                },
                "begin": 66
            },
            "layer2": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 128,
                    "state_is_tuple": true
                },
                "begin": 65
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.keep_prob"
                },
                "begin": 66
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": 70,
                    "units": 128,
                    "name": "fc1"
                },
                "begin": 74
            },
            "layer5": {
                "type": "Dropout",
                "func": "tf.contrib.layers.dropout",
                "args": {
                    "inputs": ""
                },
                "begin": 75
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 76
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 10,
                    "name": "fc2"
                },
                "begin": 79
            },
            "layer8": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.logits",
                    "labels": "self.input_y"
                },
                "begin": 84
            }
        }
    },
    "9": {
        "id": "9",
        "Project_Name": "zh-NER-TF",
        "url": "https://github.com/Determined22/zh-NER-TF",
        "file_name": "model.py",
        "type": "bilstm",
        "hyperparameters": {
            "batch size": 64,
            "epochs": 40,
            "learning rate": 0.001,
            "dropout": 0.5
        },
        "num_layers": 7,
        "layers": {
            "layer0": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 35
            },
            "layer1": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.LSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 39
            },
            "layer2": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.LSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 40
            },
            "layer3": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "cell_fw": {
                        "func": "tf.contrib.rnn.LSTMCell",
                        "args": {
                            "num_units": ""
                        },
                        "layer": "LSTM",
                        "body": [],
                        "lineno": 39
                    },
                    "cell_bw": {
                        "func": "tf.contrib.rnn.LSTMCell",
                        "args": {
                            "num_units": ""
                        },
                        "layer": "LSTM",
                        "body": [],
                        "lineno": 40
                    },
                    "inputs": "self.word_embeddings",
                    "sequence_length": "self.sequence_lengths",
                    "dtype": "tf.float32"
                },
                "begin": 41
            },
            "layer4": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 48
            },
            "layer5": {
                "type": "Cross Entropy",
                "func": "tf.nn.sparse_softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.logits",
                    "labels": "self.labels"
                },
                "begin": 51
            },
            "layer6": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {
                    "learning_rate": "self.lr_pl"
                },
                "begin": 67
            }
        }
    },
    "10": {
        "id": "10",
        "Project_Name": "keras-text",
        "url": "https://github.com/raghakot/keras-text",
        "file_name": "sequence_encoders.py",
        "type": "rnn",
        "hyperparameters": {
            "batch size": 1000
        },
        "num_layers": 6,
        "layers": {
            "layer0": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 95
            },
            "layer1": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 50,
                    "return_sequences": true,
                    "null": "self.rnn_kwargs"
                },
                "begin": 96
            },
            "layer2": {
                "type": "Attention",
                "func": "tf.keras.layers.Attention",
                "args": {},
                "begin": 98
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 95
            },
            "layer4": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 50,
                    "return_sequences": true,
                    "null": "self.rnn_kwargs"
                },
                "begin": 96
            },
            "layer5": {
                "type": "Attention",
                "func": "tf.keras.layers.Attention",
                "args": {},
                "begin": 98
            }
        }
    },
    "11": {
        "id": "11",
        "Project_Name": "keras-text",
        "url": "https://github.com/raghakot/keras-text",
        "file_name": "sequence_encoders.py",
        "type": "cnn, rnn",
        "hyperparameters": {
            "batch size": 1000
        },
        "num_layers": 12,
        "layers": {
            "layer0": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 36
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.GlobalMaxPooling1D",
                "args": {},
                "begin": 38
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.GlobalMaxPooling1D",
                "args": {},
                "begin": 40
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.GlobalMaxPooling1D",
                "args": {},
                "begin": 42
            },
            "layer4": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 95
            },
            "layer5": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 50,
                    "return_sequences": true,
                    "null": "self.rnn_kwargs"
                },
                "begin": 96
            },
            "layer6": {
                "type": "Attention",
                "func": "tf.keras.layers.Attention",
                "args": {},
                "begin": 98
            },
            "layer7": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 66
            },
            "layer8": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 50,
                    "null": "self.rnn_kwargs"
                },
                "begin": 68
            },
            "layer9": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 50,
                    "null": "self.rnn_kwargs"
                },
                "begin": 68
            },
            "layer10": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 113
            },
            "layer11": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.GlobalAveragePooling1D",
                "args": {},
                "begin": 114
            }
        }
    },
    "12": {
        "id": "12",
        "Project_Name": "VDCNN",
        "url": "https://github.com/zonetrooper32/VDCNN",
        "file_name": "vdcnn.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 64,
            "epochs": 50
        },
        "num_layers": 61,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "name": "temp_conv"
                },
                "begin": 57
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer18": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer22": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer23": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer24": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer25": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer26": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer27": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer28": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer29": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer30": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer31": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer32": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer33": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer34": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer35": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer36": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer37": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer38": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer39": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer40": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer41": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer42": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer43": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer44": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer45": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer46": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer47": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer48": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer49": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer50": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer51": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer52": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer53": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer54": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer55": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer56": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer57": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 85
            },
            "layer58": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 88
            },
            "layer59": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 89
            },
            "layer60": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "sigmoid"
                },
                "begin": 90
            }
        }
    },
    "13": {
        "id": "13",
        "Project_Name": "VDCNN",
        "url": "https://github.com/zonetrooper32/VDCNN",
        "file_name": "vdcnn.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 64,
            "epochs": 50
        },
        "num_layers": 29,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "name": "temp_conv"
                },
                "begin": 57
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer11": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer14": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer17": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer23": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer24": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer25": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 81
            },
            "layer26": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 84
            },
            "layer27": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 85
            },
            "layer28": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "sigmoid"
                },
                "begin": 86
            }
        }
    },
    "14": {
        "id": "14",
        "Project_Name": "VDCNN",
        "url": "https://github.com/zonetrooper32/VDCNN",
        "file_name": "vdcnn.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 64,
            "epochs": 50
        },
        "num_layers": 85,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "name": "temp_conv"
                },
                "begin": 57
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer12": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer14": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer18": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer22": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer23": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer24": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer25": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer26": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer27": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer28": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer29": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer30": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer31": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer32": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer33": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer34": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer35": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer36": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer37": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer38": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer39": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer40": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer41": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer42": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer43": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer44": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer45": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer46": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer47": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer48": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer49": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer50": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer51": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer52": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer53": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer54": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer55": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer56": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer57": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer58": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer59": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer60": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer61": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer62": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer63": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer64": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer65": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer66": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer67": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer68": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer69": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer70": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer71": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer72": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer73": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer74": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer75": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer76": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer77": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer78": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer79": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer80": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer81": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 85
            },
            "layer82": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 88
            },
            "layer83": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 89
            },
            "layer84": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "sigmoid"
                },
                "begin": 90
            }
        }
    },
    "15": {
        "id": "15",
        "Project_Name": "VDCNN",
        "url": "https://github.com/zonetrooper32/VDCNN",
        "file_name": "vdcnn.py",
        "type": "cnn",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 64,
            "epochs": 50
        },
        "num_layers": 125,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "name": "temp_conv"
                },
                "begin": 57
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer12": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer14": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer18": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer22": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer23": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer24": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer25": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer26": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer27": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer28": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer29": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer30": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer31": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer32": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer33": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer34": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer35": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer36": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 64,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer37": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer38": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer39": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer40": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer41": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer42": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer43": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer44": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer45": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer46": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer47": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer48": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer49": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer50": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer51": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer52": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer53": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer54": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer55": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer56": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer57": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer58": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer59": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer60": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer61": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer62": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer63": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer64": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer65": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer66": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer67": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer68": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer69": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer70": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer71": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer72": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer73": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer74": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 128,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer75": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer76": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer77": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer78": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer79": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer80": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer81": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer82": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer83": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer84": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer85": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer86": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer87": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer88": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer89": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer90": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer91": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer92": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer93": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer94": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer95": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer96": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer97": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer98": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer99": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer100": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer101": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer102": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer103": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer104": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer105": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer106": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer107": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer108": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer109": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer110": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer111": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 8
            },
            "layer112": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 10
            },
            "layer113": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 11
            },
            "layer114": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 15
            },
            "layer115": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 19
            },
            "layer116": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 21
            },
            "layer117": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same"
                },
                "begin": 23
            },
            "layer118": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 512,
                    "kernel_size": 1,
                    "strides": 2,
                    "name": 27
                },
                "begin": 27
            },
            "layer119": {
                "type": "ReLu",
                "func": "tf.keras.layers.ReLU",
                "args": {},
                "begin": 31
            },
            "layer120": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 34,
                    "kernel_size": 1,
                    "strides": 1,
                    "padding": "same",
                    "name": 34
                },
                "begin": 34
            },
            "layer121": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 85
            },
            "layer122": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 88
            },
            "layer123": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "activation": "relu"
                },
                "begin": 89
            },
            "layer124": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "sigmoid"
                },
                "begin": 90
            }
        }
    },
    "16": {
        "id": "16",
        "Project_Name": "tensorflow-hangul-recognition",
        "url": "https://github.com/IBM/tensorflow-hangul-recognition",
        "file_name": "hangul_model.py",
        "type": "CNN",
        "hyperparameters": {
            "batch size": 100,
            "epochs": 15,
            "image width": 64,
            "image height": 64,
            "number of classes": 2350
        },
        "num_layers": 13,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 34
            },
            "layer1": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 36
                },
                "begin": 36
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 39
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 45
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 47
                },
                "begin": 47
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 49
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 55
            },
            "layer7": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 57
                },
                "begin": 57
            },
            "layer8": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 59
            },
            "layer9": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": 66
                },
                "begin": 66
            },
            "layer10": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": 70
                },
                "begin": 70
            },
            "layer11": {
                "type": "Sigmoid",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": 75,
                    "name": "output"
                },
                "begin": 78
            },
            "layer12": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {},
                "begin": 92
            }
        }
    },
    "17": {
        "id": "17",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 10,
        "layers": {
            "layer0": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "name": "fc1",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "activation": "clipped_relu"
                },
                "begin": 108
            },
            "layer1": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 109
            },
            "layer2": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "name": "fc2",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "activation": "clipped_relu"
                },
                "begin": 110
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 111
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 2048,
                    "name": "fc3",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "activation": "clipped_relu"
                },
                "begin": 112
            },
            "layer5": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 113
            },
            "layer6": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": "",
                    "merge_mode": "sum"
                },
                "begin": 116
            },
            "layer7": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 122
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 107
                    },
                    "activation": "softmax"
                },
                "begin": 123
            },
            "layer9": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 140
            }
        }
    },
    "18": {
        "id": "18",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC,",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 6,
        "layers": {
            "layer0": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "name": "fc1",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "activation": "clipped_relu"
                },
                "begin": 162
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "name": "fc2",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "activation": "clipped_relu"
                },
                "begin": 163
            },
            "layer2": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "name": "fc3",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "activation": "clipped_relu"
                },
                "begin": 164
            },
            "layer3": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": "",
                    "merge_mode": "sum"
                },
                "begin": 168
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "kernel_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "bias_initializer": {
                        "func": "random_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 159
                    },
                    "activation": "softmax"
                },
                "begin": 174
            },
            "layer5": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 201
            }
        }
    },
    "19": {
        "id": "19",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 7,
        "layers": {
            "layer0": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 239
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "filters": 1024,
                    "name": null,
                    "kernel_size": 11,
                    "padding": "valid",
                    "activation": "relu",
                    "strides": 2
                },
                "begin": 216
            },
            "layer2": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": "",
                    "merge_mode": "sum"
                },
                "begin": 220
            },
            "layer3": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 255
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "clipped_relu"
                },
                "begin": 226
            },
            "layer5": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "activation": "softmax"
                },
                "begin": 227
            },
            "layer6": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 268
            }
        }
    },
    "20": {
        "id": "20",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 13,
        "layers": {
            "layer0": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 302
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "name": "fc1",
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "relu"
                },
                "begin": 263
            },
            "layer2": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 264
            },
            "layer3": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "name": "fc2",
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "clipped_relu"
                },
                "begin": 265
            },
            "layer4": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 266
            },
            "layer5": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "name": "fc3",
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "clipped_relu"
                },
                "begin": 267
            },
            "layer6": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 268
            },
            "layer7": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 312
            },
            "layer8": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": "",
                    "merge_mode": "sum"
                },
                "begin": 272
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "activation": "relu",
                    "kernel_initializer": "init",
                    "bias_initializer": "init"
                },
                "begin": 276
            },
            "layer10": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.1
                },
                "begin": 277
            },
            "layer11": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "softmax"
                },
                "begin": 278
            },
            "layer12": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 330
            }
        }
    },
    "21": {
        "id": "21",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 3,
        "layers": {
            "layer0": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": ""
                },
                "begin": 298
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "activation": "softmax"
                },
                "begin": 301
            },
            "layer2": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 368
            }
        }
    },
    "22": {
        "id": "22",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 4,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "filters": 128,
                    "name": "conv_1",
                    "kernel_size": 11,
                    "padding": "valid",
                    "activation": "relu",
                    "strides": 2
                },
                "begin": 337
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "activation": "relu"
                },
                "begin": 342
            },
            "layer2": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "activation": "softmax"
                },
                "begin": 343
            },
            "layer3": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 330
            }
        }
    },
    "23": {
        "id": "23",
        "Project_Name": "KerasDeepSpeech",
        "url": "https://github.com/robmsmt/KerasDeepSpeech",
        "file_name": "model.py",
        "type": "CTC",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 2,
            "epochs": 20
        },
        "num_layers": 5,
        "layers": {
            "layer0": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "relu"
                },
                "begin": 371
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "relu"
                },
                "begin": 371
            },
            "layer2": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "kernel_initializer": "init",
                    "bias_initializer": "init",
                    "activation": "relu"
                },
                "begin": 371
            },
            "layer3": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 29,
                    "name": "y_pred",
                    "activation": "softmax"
                },
                "begin": 376
            },
            "layer4": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "",
                    "logits": "",
                    "label_length": "",
                    "logit_length": ""
                },
                "begin": 330
            }
        }
    },
    "24": {
        "id": "24",
        "Project_Name": "NER",
        "url": "https://github.com/shiyybua/NER",
        "file_name": "rnn.py",
        "type": "BiRNN, CRF",
        "hyperparameters": {
            "batch size": 128,
            "dropout rate": 0.6,
            "epochs": 10000
        },
        "num_layers": 7,
        "layers": {
            "layer0": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 42
            },
            "layer1": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 43
            },
            "layer2": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "input_keep_prob": 1.0,
                    "output_keep_prob": "DROPOUT_RATE"
                },
                "begin": 45
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "input_keep_prob": 1.0,
                    "output_keep_prob": "DROPOUT_RATE"
                },
                "begin": 46
            },
            "layer4": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 49
            },
            "layer5": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 49
            },
            "layer6": {
                "type": "CRF",
                "func": "tf.contrib.crf.crf_log_likelihood",
                "args": {
                    "inputs": "",
                    "tag_indices": "",
                    "sequence_lengths": ""
                },
                "begin": 64
            }
        }
    },
    "25": {
        "id": "25",
        "Project_Name": "NoiseMaker",
        "url": "https://github.com/HaloOrangeWang/NoiseMaker",
        "file_name": "LstmModel.py",
        "type": "LSTM",
        "hyperparameters": {
            "learning rate": 0.01,
            "batch size": 50,
            "epochs": 3,
            "decay rate": 0.7
        },
        "num_layers": 5,
        "layers": {
            "layer0": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": "",
                    "state_is_tuple": true
                },
                "begin": 12
            },
            "layer1": {
                "type": "RNN",
                "func": "tf.contrib.rnn.MultiRNNCell",
                "args": {
                    "cells": 13,
                    "state_is_tuple": true
                },
                "begin": 13
            },
            "layer2": {
                "type": "RNN",
                "func": "tf.nn.dynamic_rnn",
                "args": {
                    "cell": "",
                    "inputs": "",
                    "initial_state": "initial_state"
                },
                "begin": 17
            },
            "layer3": {
                "type": "RNN",
                "func": "tf.nn.dynamic_rnn",
                "args": {
                    "cell": "",
                    "inputs": "",
                    "initial_state": "initial_state"
                },
                "begin": 17
            },
            "layer4": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "labels": {
                        "func": "tf.one_hot",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 20
                    },
                    "logits": "logits"
                },
                "begin": 21
            }
        }
    },
    "26": {
        "id": "26",
        "Project_Name": "text-detection-ctpn",
        "url": "https://github.com/eragonruan/text-detection-ctpn",
        "file_name": "vgg.py",
        "type": "CTPN",
        "hyperparameters": {
            "learning rate": 1e-05,
            "decay rate": 0.0005
        },
        "num_layers": 22,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1-1"
                },
                "begin": 6
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1-2"
                },
                "begin": 7
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 8
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2-1"
                },
                "begin": 9
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2-2"
                },
                "begin": 10
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 11
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3-1"
                },
                "begin": 12
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3-2"
                },
                "begin": 13
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3-3"
                },
                "begin": 14
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool3"
                },
                "begin": 15
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4-1"
                },
                "begin": 16
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4-2"
                },
                "begin": 17
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4-3"
                },
                "begin": 18
            },
            "layer13": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool4"
                },
                "begin": 19
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5-1"
                },
                "begin": 20
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5-2"
                },
                "begin": 21
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5-3"
                },
                "begin": 22
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": 3
                },
                "begin": 31
            },
            "layer18": {
                "type": "BiRNN",
                "func": "tf.keras.layers.Bidirectional",
                "args": {
                    "layer": "",
                    "scope_name": "BiLSTM"
                },
                "begin": 33
            },
            "layer19": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": "",
                    "scope_name": "bbox_pred"
                },
                "begin": 35
            },
            "layer20": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": "",
                    "scope_name": "cls_pred"
                },
                "begin": 36
            },
            "layer21": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 43
            }
        }
    },
    "27": {
        "id": "27",
        "Project_Name": "CRNN_Tensorflow",
        "url": "https://github.com/MaybeShewill-CV/CRNN_Tensorflow",
        "file_name": "crnn_net.py",
        "type": "CRNN",
        "hyperparameters": {
            "learning rate": 0.01,
            "decay rate": 0.1,
            "momentum": 0.9,
            "epochs": 2000000,
            "batch size": 32
        },
        "num_layers": 59,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 48
            },
            "layer1": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 49
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": 2,
                    "strides": 2
                },
                "begin": 51
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 48
            },
            "layer5": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 49
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer7": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": 2,
                    "strides": 2
                },
                "begin": 51
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 63
            },
            "layer9": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 64
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 65
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 66
            },
            "layer12": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 67
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 68
            },
            "layer14": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        2,
                        1
                    ],
                    "strides": [
                        2,
                        1
                    ],
                    "padding": "VALID",
                    "name": "max_pool4"
                },
                "begin": 69
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 70
            },
            "layer16": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 71
            },
            "layer17": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 72
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 73
            },
            "layer19": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 74
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 75
            },
            "layer21": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        2,
                        1
                    ],
                    "strides": [
                        2,
                        1
                    ],
                    "padding": "VALID",
                    "name": "max_pool6"
                },
                "begin": 76
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": "",
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 77
            },
            "layer23": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 78
            },
            "layer24": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 79
            },
            "layer25": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.5
                },
                "begin": 99
            },
            "layer26": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 100
            },
            "layer27": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.5
                },
                "begin": 99
            },
            "layer28": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 100
            },
            "layer29": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 48
            },
            "layer30": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 49
            },
            "layer31": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer32": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": 2,
                    "strides": 2
                },
                "begin": 51
            },
            "layer33": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 48
            },
            "layer34": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 49
            },
            "layer35": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            },
            "layer36": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": 2,
                    "strides": 2
                },
                "begin": 51
            },
            "layer37": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 63
            },
            "layer38": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 64
            },
            "layer39": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 65
            },
            "layer40": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 66
            },
            "layer41": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 67
            },
            "layer42": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 68
            },
            "layer43": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        2,
                        1
                    ],
                    "strides": [
                        2,
                        1
                    ],
                    "padding": "VALID",
                    "name": "max_pool4"
                },
                "begin": 69
            },
            "layer44": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 70
            },
            "layer45": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 71
            },
            "layer46": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 72
            },
            "layer47": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": 1,
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 73
            },
            "layer48": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 74
            },
            "layer49": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 75
            },
            "layer50": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        2,
                        1
                    ],
                    "strides": [
                        2,
                        1
                    ],
                    "padding": "VALID",
                    "name": "max_pool6"
                },
                "begin": 76
            },
            "layer51": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": "",
                    "name": "conv",
                    "padding": "SAME"
                },
                "begin": 77
            },
            "layer52": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "x": ""
                },
                "begin": 78
            },
            "layer53": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 79
            },
            "layer54": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.5
                },
                "begin": 99
            },
            "layer55": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 100
            },
            "layer56": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.5
                },
                "begin": 99
            },
            "layer57": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 100
            },
            "layer58": {
                "type": "CTC",
                "func": "tf.nn.ctc_loss",
                "args": {
                    "labels": "labels",
                    "inputs": {
                        "func": "ShadowNet.inference",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 129
                    }
                },
                "begin": 132
            }
        }
    },
    "28": {
        "id": "28",
        "Project_Name": "Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment",
        "url": "https://github.com/zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment",
        "file_name": "dan_model.py",
        "type": "DAN",
        "hyperparameters": {
            "batch size": 128
        },
        "num_layers": 53,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 28
            },
            "layer1": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 29
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 31
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 28
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 29
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 31
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 34
            },
            "layer7": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 35
            },
            "layer8": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 37
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 34
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 35
            },
            "layer11": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 37
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 40
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 41
            },
            "layer14": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 43
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 40
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 41
            },
            "layer17": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 43
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 46
            },
            "layer19": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 47
            },
            "layer20": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 49
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 46
            },
            "layer22": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 47
            },
            "layer23": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 49
            },
            "layer24": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 55
            },
            "layer25": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "activation": null
                },
                "begin": 58
            },
            "layer26": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "activation": "tf.nn.relu"
                },
                "begin": 60
            },
            "layer27": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 65
            },
            "layer28": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 66
            },
            "layer29": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 68
            },
            "layer30": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 65
            },
            "layer31": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 66
            },
            "layer32": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 68
            },
            "layer33": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 71
            },
            "layer34": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 72
            },
            "layer35": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 74
            },
            "layer36": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 71
            },
            "layer37": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 72
            },
            "layer38": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 74
            },
            "layer39": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 77
            },
            "layer40": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 78
            },
            "layer41": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 80
            },
            "layer42": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 77
            },
            "layer43": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 78
            },
            "layer44": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 80
            },
            "layer45": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 83
            },
            "layer46": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 84
            },
            "layer47": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 86
            },
            "layer48": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": 3,
                    "strides": 1,
                    "padding": "same",
                    "data_format": "data_format"
                },
                "begin": 83
            },
            "layer49": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 84
            },
            "layer50": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": "",
                    "pool_size": 2,
                    "strides": 2
                },
                "begin": 86
            },
            "layer51": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 91
            },
            "layer52": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "activation": null
                },
                "begin": 94
            }
        }
    },
    "29": {
        "id": "29",
        "Project_Name": "Chinese-Text-Classification",
        "url": "https://github.com/fendouai/Chinese-Text-Classification",
        "file_name": "text_cnn.py",
        "type": "CNN",
        "hyperparameters": {
            "batch size": 64,
            "epochs": 200,
            "dropout rate": 1.0,
            "learning rate": 0.001
        },
        "num_layers": 13,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": "",
                    "ids": ""
                },
                "begin": 24
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 32
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 34
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 36
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 32
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 34
            },
            "layer6": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 36
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 32
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 34
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 36
            },
            "layer10": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 45
            },
            "layer11": {
                "type": "L2",
                "func": "tf.nn.l2_loss",
                "args": {
                    "t": ""
                },
                "begin": 50
            },
            "layer12": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.scores",
                    "labels": "self.input_y"
                },
                "begin": 55
            }
        }
    },
    "30": {
        "id": "30",
        "Project_Name": "Direct-Future-Prediction-Keras",
        "url": "https://github.com/flyyufelix/Direct-Future-Prediction-Keras",
        "file_name": "networks.py",
        "type": "DFP",
        "hyperparameters": {
            "learning rate": 1e-05,
            "batch size": 32
        },
        "num_layers": 17,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 32,
                    "kernel_size": 8,
                    "activation": "relu"
                },
                "begin": 34
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 64,
                    "kernel_size": 4,
                    "activation": "relu"
                },
                "begin": 35
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 64,
                    "kernel_size": 3,
                    "activation": "relu"
                },
                "begin": 36
            },
            "layer3": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {},
                "begin": 37
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "activation": "relu"
                },
                "begin": 38
            },
            "layer5": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 41
            },
            "layer6": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 42
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 43
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 46
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 47
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 48
            },
            "layer11": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "relu"
                },
                "begin": 51
            },
            "layer12": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "relu"
                },
                "begin": 55
            },
            "layer13": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "relu"
                },
                "begin": 55
            },
            "layer14": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "relu"
                },
                "begin": 55
            },
            "layer15": {
                "type": "Optimizer",
                "func": "tf.keras.optimizers.Adam",
                "args": {
                    "lr": "learning_rate"
                },
                "begin": 57
            },
            "layer16": {
                "type": "MSE",
                "func": "tf.keras.losses.MSE",
                "args": {},
                "begin": 59
            }
        }
    },
    "31": {
        "id": "31",
        "Project_Name": "dc_tts",
        "url": "https://github.com/Kyubyong/dc_tts",
        "file_name": "networks.py",
        "type": "SSRN",
        "hyperparameters": {
            "learning rate": 0.001,
            "batch size": 32
        },
        "num_layers": 98,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": ""
                },
                "begin": 16
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate",
                    "activation_fn": "tf.nn.relu"
                },
                "begin": 17
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate"
                },
                "begin": 20
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer4": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer6": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer8": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer10": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer12": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer14": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer16": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer18": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer20": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 25
            },
            "layer22": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 28
            },
            "layer23": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 32
            },
            "layer24": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 35
            },
            "layer25": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 32
            },
            "layer26": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 35
            },
            "layer27": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate",
                    "activation_fn": "tf.nn.relu"
                },
                "begin": 41
            },
            "layer28": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate",
                    "activation_fn": "tf.nn.relu"
                },
                "begin": 44
            },
            "layer29": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate"
                },
                "begin": 48
            },
            "layer30": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer31": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer32": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer33": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer34": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer35": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer36": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer37": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer38": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer39": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer40": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer41": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer42": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer43": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer44": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer45": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer46": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer47": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer48": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 53
            },
            "layer49": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 56
            },
            "layer50": {
                "type": "Attention",
                "func": "Attention",
                "args": {},
                "begin": 180
            },
            "layer51": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "dilation_rate": 1,
                    "dropout_rate": "hp.dropout_rate"
                },
                "begin": 87
            },
            "layer52": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer53": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer54": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer55": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer56": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer57": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer58": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer59": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer60": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer61": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer62": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 92
            },
            "layer63": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 95
            },
            "layer64": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 99
            },
            "layer65": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 102
            },
            "layer66": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 103
            },
            "layer67": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 99
            },
            "layer68": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 102
            },
            "layer69": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 103
            },
            "layer70": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 99
            },
            "layer71": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 102
            },
            "layer72": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 103
            },
            "layer73": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 106
            },
            "layer74": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 109
            },
            "layer75": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 123
            },
            "layer76": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 128
            },
            "layer77": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 131
            },
            "layer78": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 128
            },
            "layer79": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 131
            },
            "layer80": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 141
            },
            "layer81": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 144
            },
            "layer82": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 141
            },
            "layer83": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 144
            },
            "layer84": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 141
            },
            "layer85": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 144
            },
            "layer86": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 141
            },
            "layer87": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 144
            },
            "layer88": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 147
            },
            "layer89": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 152
            },
            "layer90": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 155
            },
            "layer91": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 3
                },
                "begin": 152
            },
            "layer92": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 155
            },
            "layer93": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 158
            },
            "layer94": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "activation_fn": "tf.nn.relu"
                },
                "begin": 163
            },
            "layer95": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "activation_fn": "tf.nn.relu"
                },
                "begin": 163
            },
            "layer96": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1
                },
                "begin": 167
            },
            "layer97": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 171
            }
        }
    },
    "32": {
        "id": "32",
        "Project_Name": "text-cnn-tensorflow",
        "url": "https://github.com/DongjunLee/text-cnn-tensorflow",
        "file_name": "text_cnn.py",
        "type": "CNN",
        "hyperparameters": {},
        "num_layers": 10,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": "",
                    "ids": ""
                },
                "begin": 19
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 28
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": ""
                },
                "begin": 29
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 30
            },
            "layer4": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": ""
                },
                "begin": 31
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 32
            },
            "layer6": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": ""
                },
                "begin": 33
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "activation": "tf.nn.relu"
                },
                "begin": 34
            },
            "layer8": {
                "type": "Max Pooling",
                "func": "tf.layers.max_pooling2d",
                "args": {
                    "inputs": ""
                },
                "begin": 35
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": 5
                },
                "begin": 40
            }
        }
    },
    "33": {
        "id": "33",
        "Project_Name": "PassGAN",
        "url": "https://github.com/brannondorsey/PassGAN",
        "file_name": "models.py",
        "type": "GAN",
        "hyperparameters": {
            "batch size": 64
        },
        "num_layers": 46,
        "layers": {
            "layer0": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 15
            },
            "layer1": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": 128,
                    "units": ""
                },
                "begin": 16
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer4": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer12": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer14": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer18": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer20": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "strides": ""
                },
                "begin": 22
            },
            "layer23": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 23
            },
            "layer24": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 1,
                    "strides": ""
                },
                "begin": 27
            },
            "layer25": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer26": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer27": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer28": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer29": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer30": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer31": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer32": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer33": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer34": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer35": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer36": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer37": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer38": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer39": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer40": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer41": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 8
            },
            "layer42": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 9
            },
            "layer43": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 10
            },
            "layer44": {
                "type": "Convolution",
                "func": "tf.layers.conv1d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": 5,
                    "strides": ""
                },
                "begin": 11
            },
            "layer45": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": 1,
                    "units": ""
                },
                "begin": 33
            }
        }
    },
    "34": {
        "id": "34",
        "Project_Name": "chemical_vae",
        "url": "https://github.com/aspuru-guzik-group/chemical_vae",
        "file_name": "models.py",
        "type": "VAE, RNN",
        "hyperparameters": {
            "batch size": 100,
            "epochs": 1,
            "learning rate": 0.000312087049936,
            "momentum": 0.936948773087
        },
        "num_layers": 38,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": "",
                    "activation": "tanh",
                    "name": "encoder_conv0"
                },
                "begin": 17
            },
            "layer1": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {
                    "name": "encoder_norm0"
                },
                "begin": 18
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "activation": "tanh"
                },
                "begin": 21
            },
            "layer3": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 22
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "activation": "tanh"
                },
                "begin": 21
            },
            "layer5": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 22
            },
            "layer6": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {},
                "begin": 24
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "tanh"
                },
                "begin": 27
            },
            "layer8": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 28
            },
            "layer9": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 29
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "tanh"
                },
                "begin": 30
            },
            "layer11": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 31
            },
            "layer12": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 32
            },
            "layer13": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 100
                },
                "begin": 34
            },
            "layer14": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 100,
                    "activation": "tanh"
                },
                "begin": 45
            },
            "layer15": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 46
            },
            "layer16": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 47
            },
            "layer17": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 100,
                    "activation": "tanh"
                },
                "begin": 49
            },
            "layer18": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 50
            },
            "layer19": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 51
            },
            "layer20": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 50,
                    "activation": "tanh"
                },
                "begin": 57
            },
            "layer21": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 50,
                    "activation": "tanh"
                },
                "begin": 60
            },
            "layer22": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 50,
                    "activation": "tanh"
                },
                "begin": 60
            },
            "layer23": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "activation": "softmax"
                },
                "begin": 62
            },
            "layer24": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "activation": "softmax"
                },
                "begin": 65
            },
            "layer25": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 100,
                    "name": "z_log_var_sample"
                },
                "begin": 78
            },
            "layer26": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 80
            },
            "layer27": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 36,
                    "activation": "tanh"
                },
                "begin": 91
            },
            "layer28": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 92
            },
            "layer29": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "tanh"
                },
                "begin": 95
            },
            "layer30": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 96
            },
            "layer31": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 97
            },
            "layer32": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "tanh"
                },
                "begin": 95
            },
            "layer33": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {},
                "begin": 96
            },
            "layer34": {
                "type": "Normalization",
                "func": "tf.nn.batch_normalization",
                "args": {},
                "begin": 97
            },
            "layer35": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "linear"
                },
                "begin": 100
            },
            "layer36": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "activation": "sigmoid"
                },
                "begin": 103
            },
            "layer37": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {},
                "begin": 113
            }
        }
    },
    "35": {
        "id": "35",
        "Project_Name": "cnn-text-classification-tf",
        "url": "https://github.com/dennybritz/cnn-text-classification-tf",
        "file_name": "text_cnn.py",
        "type": "CNN",
        "hyperparameters": {
            "dropout rate": 0.5,
            "batch size": 64,
            "epochs": 200,
            "learning rate": 0.001
        },
        "num_layers": 14,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": "",
                    "ids": ""
                },
                "begin": 21
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 29
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 31
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 33
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 29
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 31
            },
            "layer6": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 33
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 29
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 31
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 33
            },
            "layer10": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 42
            },
            "layer11": {
                "type": "L2",
                "func": "tf.nn.l2_loss",
                "args": {
                    "t": ""
                },
                "begin": 45
            },
            "layer12": {
                "type": "Cross Entropy",
                "func": "tf.nn.softmax_cross_entropy_with_logits",
                "args": {
                    "logits": "self.scores",
                    "labels": "self.input_y"
                },
                "begin": 47
            },
            "layer13": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {},
                "begin": 55
            }
        }
    },
    "36": {
        "id": "36",
        "Project_Name": "CNNGestureRecognizer",
        "url": "https://github.com/asingh33/CNNGestureRecognizer",
        "file_name": "gestureCNN.py",
        "type": "CNN",
        "hyperparameters": {
            "batch size": 32,
            "epochs": 15,
            "learning rate": 0.01,
            "decay rate": 1e-06,
            "momentum": 0.9
        },
        "num_layers": 9,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 32,
                    "padding": "valid"
                },
                "begin": 43
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 32
                },
                "begin": 46
            },
            "layer2": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 50
            },
            "layer3": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {},
                "begin": 52
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128
                },
                "begin": 53
            },
            "layer5": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 55
            },
            "layer6": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 5
                },
                "begin": 56
            },
            "layer7": {
                "type": "Cross Entropy",
                "func": "tf.keras.losses.categorical_crossentropy",
                "args": {},
                "begin": 60
            },
            "layer8": {
                "type": "Optimizer",
                "func": "tf.keras.optimizers.Adadelta",
                "args": {},
                "begin": 61
            }
        }
    },
    "37": {
        "id": "37",
        "Project_Name": "fast-style-transfer",
        "url": "https://github.com/lengstrom/fast-style-transfer",
        "file_name": "vgg.py",
        "type": "VGG",
        "hyperparameters": {
            "batch size": 4,
            "learning rate": 0.001,
            "epochs": 2
        },
        "num_layers": 32,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": "input_image",
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 11
                    },
                    "padding": "SAME"
                },
                "begin": 11
            },
            "layer1": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 12
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 12
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 13
                    },
                    "padding": "SAME"
                },
                "begin": 13
            },
            "layer3": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 14
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.max_pool2d",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 15
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 17
                    },
                    "padding": "SAME"
                },
                "begin": 17
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 18
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 18
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 19
                    },
                    "padding": "SAME"
                },
                "begin": 19
            },
            "layer7": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 20
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.max_pool2d",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 21
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 23
                    },
                    "padding": "SAME"
                },
                "begin": 23
            },
            "layer9": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 24
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 24
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 25
                    },
                    "padding": "SAME"
                },
                "begin": 25
            },
            "layer11": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 26
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 26
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 27
                    },
                    "padding": "SAME"
                },
                "begin": 27
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 28
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 28
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 29
                    },
                    "padding": "SAME"
                },
                "begin": 29
            },
            "layer15": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 30
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.max_pool2d",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 31
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 33
                    },
                    "padding": "SAME"
                },
                "begin": 33
            },
            "layer17": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 34
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 34
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 35
                    },
                    "padding": "SAME"
                },
                "begin": 35
            },
            "layer19": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 36
            },
            "layer20": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 36
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 37
                    },
                    "padding": "SAME"
                },
                "begin": 37
            },
            "layer21": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 38
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 38
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 39
                    },
                    "padding": "SAME"
                },
                "begin": 39
            },
            "layer23": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 40
            },
            "layer24": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.max_pool2d",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 41
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 43
                    },
                    "padding": "SAME"
                },
                "begin": 43
            },
            "layer25": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 44
            },
            "layer26": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 44
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 45
                    },
                    "padding": "SAME"
                },
                "begin": 45
            },
            "layer27": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 46
            },
            "layer28": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 46
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 47
                    },
                    "padding": "SAME"
                },
                "begin": 47
            },
            "layer29": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 48
            },
            "layer30": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "input": {
                        "func": "tf.nn.relu",
                        "args": {
                            "features": ""
                        },
                        "layer": "ReLu",
                        "body": [],
                        "lineno": 48
                    },
                    "filters": {
                        "func": "tf.constant",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 49
                    },
                    "padding": "SAME"
                },
                "begin": 49
            },
            "layer31": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 50
            }
        }
    },
    "38": {
        "id": "38",
        "Project_Name": "cnn_captcha",
        "url": "https://github.com/nickliqian/cnn_captcha",
        "file_name": "network.py",
        "type": "CNN",
        "hyperparameters": {
            "batch size": 128,
            "learning rate": 0.0001,
            "epochs": 3000
        },
        "num_layers": 19,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 11
            },
            "layer1": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 12
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 13
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 14
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 17
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 18
            },
            "layer6": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 19
            },
            "layer7": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 20
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 23
            },
            "layer9": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 24
            },
            "layer10": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "strides": [
                        1,
                        2,
                        2,
                        1
                    ],
                    "padding": "SAME"
                },
                "begin": 25
            },
            "layer11": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 26
            },
            "layer12": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": ""
                },
                "begin": 31
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 32
            },
            "layer14": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "rate": ""
                },
                "begin": 33
            },
            "layer15": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {},
                "begin": 36
            },
            "layer16": {
                "type": "Cross Entropy",
                "func": "tf.nn.sigmoid_cross_entropy_with_logits",
                "args": {
                    "logits": "y_predict",
                    "labels": "self.Y"
                },
                "begin": 38
            },
            "layer17": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {},
                "begin": 40
            },
            "layer18": {
                "type": "Optimizer",
                "func": "tf.train.AdamOptimizer",
                "args": {
                    "learning_rate": 0.0001
                },
                "begin": 42
            }
        }
    },
    "39": {
        "id": "39",
        "Project_Name": "3DUnetCNN",
        "url": "https://github.com/ellisdg/3DUnetCNN/blob/master/unet3d/model/unet.py#L111",
        "file_name": "unet.py",
        "type": "CNN, UNet",
        "hyperparameters": {
            "decay rate": 0.5,
            "epochs": 500,
            "learning rate": 1e-05
        },
        "num_layers": 36,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 32
                },
                "begin": 42
            },
            "layer1": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 44
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 32
                },
                "begin": 45
            },
            "layer3": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 47
            },
            "layer4": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.MaxPooling3D",
                "args": {
                    "pool_size": ""
                },
                "begin": 48
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 64
                },
                "begin": 50
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 52
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 64
                },
                "begin": 53
            },
            "layer8": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 55
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.MaxPooling3D",
                "args": {
                    "pool_size": ""
                },
                "begin": 56
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 128
                },
                "begin": 58
            },
            "layer11": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 60
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 128
                },
                "begin": 61
            },
            "layer13": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 63
            },
            "layer14": {
                "type": "Max Pooling",
                "func": "tf.keras.layers.MaxPooling3D",
                "args": {
                    "pool_size": ""
                },
                "begin": 64
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 256
                },
                "begin": 66
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 68
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "input_layer": "inputs",
                    "n_filters": 256
                },
                "begin": 69
            },
            "layer18": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 71
            },
            "layer19": {
                "type": "Deconvolution",
                "func": "tf.keras.layers.Deconvolution3D",
                "args": {
                    "filters": "n_filters"
                },
                "begin": 75
            },
            "layer20": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 76
            },
            "layer21": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 78
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 79
            },
            "layer23": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 82
            },
            "layer24": {
                "type": "Deconvolution",
                "func": "tf.keras.layers.Deconvolution3D",
                "args": {
                    "filters": "n_filters"
                },
                "begin": 75
            },
            "layer25": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 76
            },
            "layer26": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 78
            },
            "layer27": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 79
            },
            "layer28": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 82
            },
            "layer29": {
                "type": "Deconvolution",
                "func": "tf.keras.layers.Deconvolution3D",
                "args": {
                    "filters": "n_filters"
                },
                "begin": 75
            },
            "layer30": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 76
            },
            "layer31": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 78
            },
            "layer32": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "padding": "padding"
                },
                "begin": 79
            },
            "layer33": {
                "type": "ReLu",
                "func": "tf.keras.activations.relu",
                "args": {},
                "begin": 82
            },
            "layer34": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv3D",
                "args": {
                    "filters": "",
                    "kernel_size": 1
                },
                "begin": 85
            },
            "layer35": {
                "type": "Optimizer",
                "func": "tf.keras.optimizers.Adam",
                "args": {
                    "lr": "initial_learning_rate"
                },
                "begin": 89
            }
        }
    },
    "40": {
        "id": "40",
        "Project_Name": "PoseCNN",
        "url": "https://github.com/yuxng/PoseCNN",
        "file_name": "vgg16.py",
        "type": "VGG",
        "hyperparameters": {},
        "num_layers": 24,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 64,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv1_1",
                    "reuse": "reuse",
                    "c_i": 3
                },
                "begin": 5
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 64,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv1_2",
                    "reuse": "reuse",
                    "c_i": 64
                },
                "begin": 6
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": 2,
                    "pool_size": 2,
                    "strides": 2,
                    "padding": 2,
                    "name": "pool1"
                },
                "begin": 7
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 128,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv2_1",
                    "reuse": "reuse",
                    "c_i": 64
                },
                "begin": 8
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 128,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv2_2",
                    "reuse": "reuse",
                    "c_i": 128
                },
                "begin": 9
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": 2,
                    "pool_size": 2,
                    "strides": 2,
                    "padding": 2,
                    "name": "pool2"
                },
                "begin": 10
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 256,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv3_1",
                    "reuse": "reuse",
                    "c_i": 128
                },
                "begin": 11
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 256,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv3_2",
                    "reuse": "reuse",
                    "c_i": 256
                },
                "begin": 12
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 256,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv3_3",
                    "reuse": "reuse",
                    "c_i": 256
                },
                "begin": 13
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": 2,
                    "pool_size": 2,
                    "strides": 2,
                    "padding": 2,
                    "name": "pool3"
                },
                "begin": 14
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv4_1",
                    "reuse": "reuse",
                    "c_i": 256
                },
                "begin": 15
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv4_2",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 16
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv4_3",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 17
            },
            "layer13": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": 2,
                    "pool_size": 2,
                    "strides": 2,
                    "padding": 2,
                    "name": "pool4"
                },
                "begin": 18
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv5_1",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 19
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv5_2",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 20
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 3,
                    "num_outputs": 3,
                    "kernel_size": 512,
                    "strides": 1,
                    "padding": 1,
                    "name": "conv5_3",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 21
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 1,
                    "num_outputs": 1,
                    "kernel_size": "",
                    "strides": 1,
                    "padding": 1,
                    "name": "score_conv5",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 22
            },
            "layer18": {
                "type": "Deconvolution",
                "func": "tf.nn.conv2d_transpose",
                "args": {
                    "input": 4,
                    "filters": 4,
                    "output_shape": "",
                    "strides": 2,
                    "name": "upscore_conv5",
                    "reuse": "reuse",
                    "trainable": false
                },
                "begin": 23
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 1,
                    "num_outputs": 1,
                    "kernel_size": "",
                    "strides": 1,
                    "padding": 1,
                    "name": "score_conv4",
                    "reuse": "reuse",
                    "c_i": 512
                },
                "begin": 25
            },
            "layer20": {
                "type": "Deconvolution",
                "func": "tf.nn.conv2d_transpose",
                "args": {
                    "input": "",
                    "filters": "",
                    "output_shape": "",
                    "strides": "",
                    "name": "upscore",
                    "reuse": "reuse",
                    "trainable": false
                },
                "begin": 27
            },
            "layer21": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": "",
                    "name": "gru2d",
                    "reuse": "reuse"
                },
                "begin": 29
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.layers.conv2d",
                "args": {
                    "inputs": 1,
                    "num_outputs": 1,
                    "kernel_size": "",
                    "strides": 1,
                    "padding": 1,
                    "name": "score",
                    "reuse": "reuse",
                    "c_i": "self.num_units"
                },
                "begin": 30
            },
            "layer23": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": "",
                    "name": "prob"
                },
                "begin": 31
            }
        }
    },
    "41": {
        "id": "41",
        "Project_Name": "text_classification",
        "url": "https://github.com/brightmart/text_classification",
        "file_name": "p7_TextCNN_train.py",
        "type": "CNN",
        "hyperparameters": {
            "batch size": 64,
            "learning rate": 0.0003,
            "epochs": 10
        },
        "num_layers": 16,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 50
            },
            "layer1": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn_bn_"
                },
                "begin": 51
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 54
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 55
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 50
            },
            "layer5": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn_bn_"
                },
                "begin": 51
            },
            "layer6": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 54
            },
            "layer7": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 55
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "conv"
                },
                "begin": 50
            },
            "layer9": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn_bn_"
                },
                "begin": 51
            },
            "layer10": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": "",
                    "name": "relu"
                },
                "begin": 54
            },
            "layer11": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 55
            },
            "layer12": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.8
                },
                "begin": 56
            },
            "layer13": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": "",
                    "activation": "tf.nn.tanh",
                    "use_bias": true
                },
                "begin": 57
            },
            "layer14": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 22
            },
            "layer15": {
                "type": "Cross Entropy",
                "func": "tf.nn.sigmoid_cross_entropy_with_logits",
                "args": {
                    "labels": "self.input_y_multilabel",
                    "logits": "self.logits"
                },
                "begin": 34
            }
        }
    },
    "42": {
        "id": "42",
        "Project_Name": "text_classification",
        "url": "https://github.com/brightmart/text_classification",
        "file_name": "p7_TextCNN_train.py",
        "type": "CNN-1",
        "hyperparameters": {
            "batch size": 64,
            "learning rate": 0.0003,
            "epochs": 10
        },
        "num_layers": 24,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv"
                },
                "begin": 51
            },
            "layer1": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn1"
                },
                "begin": 52
            },
            "layer2": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 55
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv2"
                },
                "begin": 61
            },
            "layer4": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn2"
                },
                "begin": 62
            },
            "layer5": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 66
            },
            "layer6": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 69
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv"
                },
                "begin": 51
            },
            "layer8": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn1"
                },
                "begin": 52
            },
            "layer9": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 55
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv2"
                },
                "begin": 61
            },
            "layer11": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn2"
                },
                "begin": 62
            },
            "layer12": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 66
            },
            "layer13": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 69
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv"
                },
                "begin": 51
            },
            "layer15": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn1"
                },
                "begin": 52
            },
            "layer16": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 55
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.nn.conv2d",
                "args": {
                    "inputs": "",
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "SAME",
                    "name": "conv2"
                },
                "begin": 61
            },
            "layer18": {
                "type": "Normalization",
                "func": "tf.contrib.layers.batch_norm",
                "args": {
                    "inputs": "",
                    "is_training": "self.is_training_flag",
                    "scope": "cnn2"
                },
                "begin": 62
            },
            "layer19": {
                "type": "ReLu",
                "func": "tf.nn.relu",
                "args": {
                    "features": ""
                },
                "begin": 66
            },
            "layer20": {
                "type": "Max Pooling",
                "func": "tf.nn.max_pool",
                "args": {
                    "input": "",
                    "ksize": [
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "padding": "VALID",
                    "name": "pool"
                },
                "begin": 69
            },
            "layer21": {
                "type": "Dropout",
                "func": "tf.nn.dropout",
                "args": {
                    "x": "",
                    "keep_prob": 0.8
                },
                "begin": 75
            },
            "layer22": {
                "type": "Sigmoid",
                "func": "tf.nn.sigmoid",
                "args": {
                    "x": ""
                },
                "begin": 22
            },
            "layer23": {
                "type": "Cross Entropy",
                "func": "tf.nn.sigmoid_cross_entropy_with_logits",
                "args": {
                    "labels": "self.input_y_multilabel",
                    "logits": "self.logits"
                },
                "begin": 34
            }
        }
    },
    "43": {
        "id": "43",
        "Project_Name": "text_classification",
        "url": "https://github.com/brightmart/text_classification",
        "file_name": "p8_TextRNN_model.py",
        "type": "RNN",
        "hyperparameters": {
            "batch size": 64,
            "learning rate": 0.0003,
            "epochs": 10
        },
        "num_layers": 10,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": "",
                    "ids": ""
                },
                "begin": 49
            },
            "layer1": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 52
            },
            "layer2": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 53
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.dropout_keep_prob"
                },
                "begin": 54
            },
            "layer4": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 59
            },
            "layer5": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 59
            },
            "layer6": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": ""
                },
                "begin": 67
            },
            "layer7": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 68
            },
            "layer8": {
                "type": "Cross Entropy",
                "func": "tf.nn.sparse_softmax_cross_entropy_with_logits",
                "args": {
                    "labels": "self.input_y",
                    "logits": "self.logits"
                },
                "begin": 38
            },
            "layer9": {
                "type": "L2",
                "func": "tf.nn.l2_loss",
                "args": {
                    "t": ""
                },
                "begin": 40
            }
        }
    },
    "44": {
        "id": "44",
        "Project_Name": "text_classification",
        "url": "https://github.com/brightmart/text_classification",
        "file_name": "p8_TextRNN_model.py",
        "type": "RNN-1",
        "hyperparameters": {
            "batch size": 64,
            "learning rate": 0.0003,
            "epochs": 10
        },
        "num_layers": 13,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": "",
                    "ids": ""
                },
                "begin": 43
            },
            "layer1": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 46
            },
            "layer2": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": ""
                },
                "begin": 47
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.dropout_keep_prob"
                },
                "begin": 48
            },
            "layer4": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 53
            },
            "layer5": {
                "type": "BiRNN",
                "func": "tf.nn.bidirectional_dynamic_rnn",
                "args": {
                    "dtype": "tf.float32"
                },
                "begin": 53
            },
            "layer6": {
                "type": "LSTM",
                "func": "tf.contrib.rnn.BasicLSTMCell",
                "args": {
                    "num_units": 57
                },
                "begin": 57
            },
            "layer7": {
                "type": "Dropout",
                "func": "tf.contrib.rnn.DropoutWrapper",
                "args": {
                    "cell": "",
                    "output_keep_prob": "self.dropout_keep_prob"
                },
                "begin": 58
            },
            "layer8": {
                "type": "RNN",
                "func": "tf.nn.dynamic_rnn",
                "args": {
                    "cell": "",
                    "inputs": "",
                    "dtype": "tf.float32"
                },
                "begin": 59
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.layers.dense",
                "args": {
                    "inputs": "",
                    "units": ""
                },
                "begin": 63
            },
            "layer10": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {
                    "logits": ""
                },
                "begin": 64
            },
            "layer11": {
                "type": "Cross Entropy",
                "func": "tf.nn.sparse_softmax_cross_entropy_with_logits",
                "args": {
                    "labels": "self.input_y",
                    "logits": "self.logits"
                },
                "begin": 37
            },
            "layer12": {
                "type": "L2",
                "func": "tf.nn.l2_loss",
                "args": {
                    "t": ""
                },
                "begin": 39
            }
        }
    },
    "45": {
        "id": "45",
        "Project_Name": "kk7nc_text_classification",
        "url": "https://github.com/kk7nc/Text_Classification",
        "file_name": "DNN.py",
        "type": "DNN",
        "hyperparameters": {
            "epochs": 10,
            "batch size": 128
        },
        "num_layers": 12,
        "layers": {
            "layer0": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "input_dim": "shape",
                    "activation": "relu"
                },
                "begin": 18
            },
            "layer1": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 19
            },
            "layer2": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "input_dim": 512,
                    "activation": "relu"
                },
                "begin": 21
            },
            "layer3": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 22
            },
            "layer4": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "input_dim": 512,
                    "activation": "relu"
                },
                "begin": 21
            },
            "layer5": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 22
            },
            "layer6": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "input_dim": 512,
                    "activation": "relu"
                },
                "begin": 21
            },
            "layer7": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 22
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 512,
                    "input_dim": 512,
                    "activation": "relu"
                },
                "begin": 21
            },
            "layer9": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 22
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "softmax"
                },
                "begin": 23
            },
            "layer11": {
                "type": "Cross Entropy",
                "func": "tf.keras.losses.categorical_crossentropy",
                "args": {},
                "begin": 25
            }
        }
    },
    "46": {
        "id": "46",
        "Project_Name": "kk7nc_text_classification",
        "url": "https://github.com/kk7nc/Text_Classification",
        "file_name": "CNN.py",
        "type": "CNN",
        "hyperparameters": {
            "epochs": 1000,
            "batch size": 128
        },
        "num_layers": 14,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": 22,
                    "ids": "",
                    "weights": [],
                    "input_length": "MAX_SEQUENCE_LENGTH",
                    "trainable": true
                },
                "begin": 22
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "kernel_size": "fsz",
                    "activation": "relu"
                },
                "begin": 40
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "kernel_size": "fsz",
                    "activation": "relu"
                },
                "begin": 40
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "kernel_size": "fsz",
                    "activation": "relu"
                },
                "begin": 40
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "kernel_size": "fsz",
                    "activation": "relu"
                },
                "begin": 40
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "kernel_size": "fsz",
                    "activation": "relu"
                },
                "begin": 40
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "activation": "relu"
                },
                "begin": 46
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": 128,
                    "padding": "same",
                    "activation": "relu"
                },
                "begin": 48
            },
            "layer8": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 50
            },
            "layer9": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {},
                "begin": 51
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 128,
                    "activation": "relu"
                },
                "begin": 52
            },
            "layer11": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 53
            },
            "layer12": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "softmax"
                },
                "begin": 55
            },
            "layer13": {
                "type": "Cross Entropy",
                "func": "tf.keras.losses.categorical_crossentropy",
                "args": {},
                "begin": 58
            }
        }
    },
    "47": {
        "id": "47",
        "Project_Name": "kk7nc_text_classification",
        "url": "https://github.com/kk7nc/Text_Classification",
        "file_name": "RNN.py",
        "type": "RNN",
        "hyperparameters": {
            "epochs": 20,
            "batch size": 128
        },
        "num_layers": 10,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": 23,
                    "ids": "",
                    "weights": [],
                    "input_length": "MAX_SEQUENCE_LENGTH",
                    "trainable": true
                },
                "begin": 23
            },
            "layer1": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 30
            },
            "layer2": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 31
            },
            "layer3": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 30
            },
            "layer4": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 31
            },
            "layer5": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 30
            },
            "layer6": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.5
                },
                "begin": 31
            },
            "layer7": {
                "type": "GRU",
                "func": "tf.keras.layers.GRU",
                "args": {
                    "num_units": 256,
                    "recurrent_dropout": 0.2
                },
                "begin": 32
            },
            "layer8": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "activation": "softmax"
                },
                "begin": 34
            },
            "layer9": {
                "type": "Cross Entropy",
                "func": "tf.keras.losses.categorical_crossentropy",
                "args": {},
                "begin": 36
            }
        }
    },
    "48": {
        "id": "48",
        "Project_Name": "kk7nc_text_classification",
        "url": "https://github.com/kk7nc/Text_Classification",
        "file_name": "RCNN.py",
        "type": "RCNN",
        "hyperparameters": {
            "epochs": 15,
            "batch size": 128
        },
        "num_layers": 14,
        "layers": {
            "layer0": {
                "type": "Embedding",
                "func": "tf.nn.embedding_lookup",
                "args": {
                    "params": 20,
                    "ids": "",
                    "weights": [],
                    "input_length": "MAX_SEQUENCE_LENGTH",
                    "trainable": true
                },
                "begin": 20
            },
            "layer1": {
                "type": "Dropout",
                "func": "tf.keras.layers.Dropout",
                "args": {
                    "rate": 0.25
                },
                "begin": 25
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 2,
                    "activation": "relu"
                },
                "begin": 26
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 2,
                    "activation": "relu"
                },
                "begin": 28
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 2,
                    "activation": "relu"
                },
                "begin": 30
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv1D",
                "args": {
                    "num_outputs": 256,
                    "kernel_size": 2,
                    "activation": "relu"
                },
                "begin": 32
            },
            "layer6": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 34
            },
            "layer7": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 35
            },
            "layer8": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 256,
                    "return_sequences": true,
                    "recurrent_dropout": 0.2
                },
                "begin": 36
            },
            "layer9": {
                "type": "LSTM",
                "func": "tf.keras.layers.LSTM",
                "args": {
                    "num_units": 256,
                    "recurrent_dropout": 0.2
                },
                "begin": 37
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": 1024,
                    "activation": "relu"
                },
                "begin": 38
            },
            "layer11": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": ""
                },
                "begin": 39
            },
            "layer12": {
                "type": "Softmax",
                "func": "tf.nn.softmax",
                "args": {},
                "begin": 40
            },
            "layer13": {
                "type": "Cross Entropy",
                "func": "tf.keras.losses.categorical_crossentropy",
                "args": {},
                "begin": 41
            }
        }
    },
    "49": {
        "id": "49",
        "Project_Name": "keras-applications",
        "url": "https://github.com/keras-team/keras-applications/tree/master/keras_applications",
        "file_name": "vgg16.py",
        "type": "VGG-16",
        "hyperparameters": {},
        "num_layers": 17,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 64,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block1_conv1"
                },
                "begin": 69
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 64,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block1_conv2"
                },
                "begin": 73
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 128,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block2_conv1"
                },
                "begin": 80
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 128,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block2_conv2"
                },
                "begin": 84
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv1"
                },
                "begin": 91
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv2"
                },
                "begin": 95
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv3"
                },
                "begin": 99
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv1"
                },
                "begin": 106
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv2"
                },
                "begin": 110
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv3"
                },
                "begin": 114
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv1"
                },
                "begin": 121
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv2"
                },
                "begin": 125
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv3"
                },
                "begin": 129
            },
            "layer13": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": "",
                    "name": "flatten"
                },
                "begin": 137
            },
            "layer14": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": 4096,
                    "activation": "relu",
                    "name": "fc1"
                },
                "begin": 138
            },
            "layer15": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": 4096,
                    "activation": "relu",
                    "name": "fc2"
                },
                "begin": 139
            },
            "layer16": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": "",
                    "activation": "softmax",
                    "name": "predictions"
                },
                "begin": 140
            }
        }
    },
    "50": {
        "id": "50",
        "Project_Name": "keras-applications",
        "url": "https://github.com/keras-team/keras-applications/tree/master/keras_applications",
        "file_name": "vgg19.py",
        "type": "VGG-19",
        "hyperparameters": {},
        "num_layers": 20,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 64,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block1_conv1"
                },
                "begin": 69
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 64,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block1_conv2"
                },
                "begin": 73
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 128,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block2_conv1"
                },
                "begin": 80
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 128,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block2_conv2"
                },
                "begin": 84
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv1"
                },
                "begin": 91
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv2"
                },
                "begin": 95
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv3"
                },
                "begin": 99
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 256,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block3_conv4"
                },
                "begin": 103
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv1"
                },
                "begin": 110
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv2"
                },
                "begin": 114
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv3"
                },
                "begin": 118
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block4_conv4"
                },
                "begin": 122
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv1"
                },
                "begin": 129
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv2"
                },
                "begin": 133
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv3"
                },
                "begin": 137
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.keras.layers.Conv2D",
                "args": {
                    "filters": "",
                    "kernel_size": 512,
                    "activation": "relu",
                    "padding": "same",
                    "name": "block5_conv4"
                },
                "begin": 141
            },
            "layer16": {
                "type": "Flatten",
                "func": "tf.keras.layers.Flatten",
                "args": {
                    "inputs": "",
                    "name": "flatten"
                },
                "begin": 149
            },
            "layer17": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": 4096,
                    "activation": "relu",
                    "name": "fc1"
                },
                "begin": 150
            },
            "layer18": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": 4096,
                    "activation": "relu",
                    "name": "fc2"
                },
                "begin": 151
            },
            "layer19": {
                "type": "Dense",
                "func": "tf.keras.layers.Dense",
                "args": {
                    "inputs": "",
                    "units": "",
                    "activation": "softmax",
                    "name": "predictions"
                },
                "begin": 152
            }
        }
    },
    "51": {
        "id": "51",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "alexnet.py",
        "type": "AlexNet",
        "hyperparameters": {
            "batch size": 5,
            "image height": 224,
            "image width": 224,
            "number of classes": 1000,
            "dropout rate": 0.5
        },
        "num_layers": 13,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "padding": "VALID",
                    "scope": "conv1"
                },
                "begin": 45
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 47
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 192,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 48
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 49
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 384,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 50
            },
            "layer5": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 384,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 51
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 52
            },
            "layer7": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool5"
                },
                "begin": 53
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "padding": "VALID",
                    "scope": "fc6"
                },
                "begin": 57
            },
            "layer9": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout6"
                },
                "begin": 59
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "scope": "fc7"
                },
                "begin": 61
            },
            "layer11": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout7"
                },
                "begin": 64
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": "",
                    "activation_fn": null,
                    "normalizer_fn": null,
                    "biases_initializer": {
                        "func": "tf.zeros_initializer",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 66
                    },
                    "scope": "fc8"
                },
                "begin": 66
            }
        }
    },
    "52": {
        "id": "52",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "cifarnet.py",
        "type": "CifarNet",
        "hyperparameters": {
            "image width": 32,
            "image height": 32,
            "number of classes": 10,
            "dropout rate": 0.5
        },
        "num_layers": 11,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 39
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 41
            },
            "layer2": {
                "type": "Normalization",
                "func": "tf.nn.lrn",
                "args": {
                    "inputs": "",
                    "bias": 1.0,
                    "alpha": 43,
                    "beta": 0.75,
                    "name": "norm1"
                },
                "begin": 43
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 44
            },
            "layer4": {
                "type": "Normalization",
                "func": "tf.nn.lrn",
                "args": {
                    "inputs": "",
                    "bias": 1.0,
                    "alpha": 46,
                    "beta": 0.75,
                    "name": "norm2"
                },
                "begin": 46
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 47
            },
            "layer6": {
                "type": "Flatten",
                "func": "tf.contrib.slim.flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 49
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 384,
                    "scope": "fc3"
                },
                "begin": 51
            },
            "layer8": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout3"
                },
                "begin": 53
            },
            "layer9": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 192,
                    "scope": "fc4"
                },
                "begin": 55
            },
            "layer10": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "biases_initializer": {
                        "func": "tf.zeros_initializer",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 61
                    },
                    "weights_initializer": {
                        "func": "trunc_normal",
                        "args": {},
                        "layer": "",
                        "body": [],
                        "lineno": 62
                    },
                    "weights_regularizer": null,
                    "activation_fn": null,
                    "scope": "logits"
                },
                "begin": 58
            }
        }
    },
    "53": {
        "id": "53",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "lenet.py",
        "type": "LeNet",
        "hyperparameters": {
            "image width": 28,
            "image height": 28,
            "number of classes": 10,
            "dropout rate": 0.5
        },
        "num_layers": 8,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 32,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 40
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 41
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 42
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 43
            },
            "layer4": {
                "type": "Flatten",
                "func": "tf.contrib.slim.flatten",
                "args": {
                    "inputs": ""
                },
                "begin": 44
            },
            "layer5": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 1024,
                    "scope": "fc3"
                },
                "begin": 47
            },
            "layer6": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout3"
                },
                "begin": 48
            },
            "layer7": {
                "type": "Dense",
                "func": "tf.contrib.slim.fully_connected",
                "args": {
                    "inputs": "",
                    "num_outputs": 10,
                    "activation_fn": null,
                    "scope": "fc4"
                },
                "begin": 49
            }
        }
    },
    "54": {
        "id": "54",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "vgg.py",
        "type": "VGG-a",
        "hyperparameters": {
            "image width": 224,
            "image height": 224,
            "number of classes": 1000,
            "batch size": 5,
            "dropout rate": 0.5
        },
        "num_layers": 15,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 40
            },
            "layer1": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 41
            },
            "layer2": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 42
            },
            "layer3": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 43
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 44
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool3"
                },
                "begin": 45
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 46
            },
            "layer7": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool4"
                },
                "begin": 47
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 48
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool5"
                },
                "begin": 49
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "padding": "VALID",
                    "scope": "fc6"
                },
                "begin": 52
            },
            "layer11": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout6"
                },
                "begin": 53
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "scope": "fc7"
                },
                "begin": 55
            },
            "layer13": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout7"
                },
                "begin": 62
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": "",
                    "kernel_size": "",
                    "activation_fn": null,
                    "normalizer_fn": null,
                    "scope": "fc8"
                },
                "begin": 63
            }
        }
    },
    "55": {
        "id": "55",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "vgg16.py",
        "type": "VGG-16",
        "hyperparameters": {
            "image width": 224,
            "image height": 224,
            "number of classes": 1000,
            "batch size": 5,
            "dropout rate": 0.5
        },
        "num_layers": 23,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 40
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 41
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 42
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 43
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 44
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 45
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 46
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 47
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 48
            },
            "layer9": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool3"
                },
                "begin": 49
            },
            "layer10": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 50
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 51
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 52
            },
            "layer13": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool4"
                },
                "begin": 53
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 54
            },
            "layer15": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 55
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 56
            },
            "layer17": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool5"
                },
                "begin": 57
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "padding": "VALID",
                    "scope": "fc6"
                },
                "begin": 60
            },
            "layer19": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout6"
                },
                "begin": 61
            },
            "layer20": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "scope": "fc7"
                },
                "begin": 63
            },
            "layer21": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout7"
                },
                "begin": 70
            },
            "layer22": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 1000,
                    "kernel_size": "",
                    "activation_fn": null,
                    "normalizer_fn": null,
                    "scope": "fc8"
                },
                "begin": 71
            }
        }
    },
    "56": {
        "id": "56",
        "Project_Name": "tensorflow_models",
        "url": "https://github.com/tensorflow/models",
        "file_name": "vgg19.py",
        "type": "VGG-19",
        "hyperparameters": {
            "image width": 224,
            "image height": 224,
            "number of classes": 1000,
            "batch size": 5,
            "dropout rate": 0.5
        },
        "num_layers": 26,
        "layers": {
            "layer0": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 40
            },
            "layer1": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 64,
                    "kernel_size": "",
                    "scope": "conv1"
                },
                "begin": 41
            },
            "layer2": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool1"
                },
                "begin": 42
            },
            "layer3": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 43
            },
            "layer4": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 128,
                    "kernel_size": "",
                    "scope": "conv2"
                },
                "begin": 44
            },
            "layer5": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool2"
                },
                "begin": 45
            },
            "layer6": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 46
            },
            "layer7": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 47
            },
            "layer8": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 48
            },
            "layer9": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 256,
                    "kernel_size": "",
                    "scope": "conv3"
                },
                "begin": 49
            },
            "layer10": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool3"
                },
                "begin": 50
            },
            "layer11": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 51
            },
            "layer12": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 52
            },
            "layer13": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 53
            },
            "layer14": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv4"
                },
                "begin": 54
            },
            "layer15": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool4"
                },
                "begin": 55
            },
            "layer16": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 56
            },
            "layer17": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 57
            },
            "layer18": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 58
            },
            "layer19": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 512,
                    "kernel_size": "",
                    "scope": "conv5"
                },
                "begin": 59
            },
            "layer20": {
                "type": "Max Pooling",
                "func": "tf.contrib.slim.max_pool2d",
                "args": {
                    "inputs": "",
                    "pool_size": "",
                    "scope": "pool5"
                },
                "begin": 60
            },
            "layer21": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "padding": "VALID",
                    "scope": "fc6"
                },
                "begin": 63
            },
            "layer22": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout6"
                },
                "begin": 64
            },
            "layer23": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 4096,
                    "kernel_size": "",
                    "scope": "fc7"
                },
                "begin": 66
            },
            "layer24": {
                "type": "Dropout",
                "func": "tf.contrib.slim.dropout",
                "args": {
                    "inputs": "",
                    "is_training": "is_training",
                    "scope": "dropout7"
                },
                "begin": 73
            },
            "layer25": {
                "type": "Convolution",
                "func": "tf.contrib.slim.conv2d",
                "args": {
                    "inputs": "",
                    "num_outputs": 1000,
                    "kernel_size": "",
                    "activation_fn": null,
                    "normalizer_fn": null,
                    "scope": "fc8"
                },
                "begin": 74
            }
        }
    }
}
